import requests
import json
from datetime import datetime
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

class OpenRouterTester:
    def __init__(self, api_key=None):
        self.api_key = api_key or os.getenv('OPENROUTER_API_KEY')
        self.base_url = "https://openrouter.ai/api/v1/chat/completions"
        
    def test_connection(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ OpenRouter API"""
        
        print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OpenRouter API...")
        print("=" * 50)
        
        if not self.api_key:
            print("‚ùå –û–®–ò–ë–ö–ê: API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            print("   –î–æ–±–∞–≤—å OPENROUTER_API_KEY –≤ —Ñ–∞–π–ª .env –∏–ª–∏ –ø–µ—Ä–µ–¥–∞–π –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä")
            return False
            
        headers = {
            "Authorization": f"Bearer {self.api_key}",
            "Content-Type": "application/json",
            "HTTP-Referer": "https://www.facebook.com/groups/1075275215820713",  # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
            "X-Title": "AI Scraper Bot"  # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
        }
        
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        test_data = {
            "model": "deepseek/deepseek-chat-v3-0324:free",
            "messages": [
                {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –û—Ç–≤–µ—Ç—å –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º: —Ä–∞–±–æ—Ç–∞–µ—Ç"}
            ],
            "max_tokens": 10,
            "temperature": 0.1
        }
        
        try:
            print(f"üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ {self.base_url}")
            print(f"ü§ñ –ú–æ–¥–µ–ª—å: {test_data['model']}")
            print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}")
            print("-" * 30)
            
            response = requests.post(
                self.base_url, 
                headers=headers, 
                json=test_data,
                timeout=30
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
            if response.status_code == 200:
                result = response.json()
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI
                ai_response = result["choices"][0]["message"]["content"]
                
                # –ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ —É—Å–ø–µ—Ö–∞
                print("‚úÖ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –£–°–ü–ï–®–ù–û!")
                print("üéâ OpenRouter API —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!")
                print(f"ü§ñ –û—Ç–≤–µ—Ç AI: '{ai_response.strip()}'")
                print(f"üí∞ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: {result.get('usage', {}).get('total_tokens', 'N/A')}")
                print(f"üè∑Ô∏è  –ú–æ–¥–µ–ª—å: {result.get('model', 'N/A')}")
                print("=" * 50)
                
                return True
                
            else:
                print(f"‚ùå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø!")
                print(f"   –°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
                return False
                
        except requests.exceptions.Timeout:
            print("‚ùå –û–®–ò–ë–ö–ê: –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (30 —Å–µ–∫)")
            return False
            
        except requests.exceptions.ConnectionError:
            print("‚ùå –û–®–ò–ë–ö–ê: –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º")
            return False
            
        except json.JSONDecodeError:
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –≤ –æ—Ç–≤–µ—Ç–µ")
            return False
            
        except Exception as e:
            print(f"‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–ê–Ø –û–®–ò–ë–ö–ê: {str(e)}")
            return False
    
    def get_available_models(self):
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π"""
        
        print("\nüîç –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π...")
        
        try:
            models_url = "https://openrouter.ai/api/v1/models"
            headers = {"Authorization": f"Bearer {self.api_key}"}
            
            response = requests.get(models_url, headers=headers, timeout=15)
            
            if response.status_code == 200:
                models = response.json()
                print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è —Å–∫—Ä–∞–ø–ø–∏–Ω–≥–∞:")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–µ—à–µ–≤—ã–µ –º–æ–¥–µ–ª–∏
                cheap_models = [
                    "deepseek/deepseek-chat",
                    "meta-llama/llama-3.2-3b-instruct:free",
                    "microsoft/phi-3-mini-128k-instruct:free",
                    "google/gemma-2-9b-it:free"
                ]
                
                for model in cheap_models:
                    print(f"   ü§ñ {model}")
                    
                return True
            else:
                print(f"   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π: {response.status_code}")
                return False
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–æ–¥–µ–ª–µ–π: {str(e)}")
            return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üöÄ AI SCRAPER - –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø")
    print("=" * 50)
    
    # –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å API –∫–ª—é—á –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª
    # tester = OpenRouterTester("your_api_key_here")
    tester = OpenRouterTester()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    success = tester.test_connection()
    
    if success:
        # –ï—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
        tester.get_available_models()
        
        print("\nüéØ –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï!")
        print("   –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å AI –¥–ª—è —Å–∫—Ä–∞–ø–ø–∏–Ω–≥–∞")
        print("   –°–æ–∑–¥–∞–π —Ñ–∞–π–ª .env —Å —Ç–≤–æ–∏–º API –∫–ª—é—á–æ–º:")
        print("   OPENROUTER_API_KEY=your_key_here")
    else:
        print("\nüîß –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:")
        print("1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ https://openrouter.ai")
        print("2. –ü–æ–ª—É—á–∏ API –∫–ª—é—á –≤ —Ä–∞–∑–¥–µ–ª–µ Keys")
        print("3. –°–æ–∑–¥–∞–π —Ñ–∞–π–ª .env —Å –∫–ª—é—á–æ–º")
        print("4. –ó–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")

if __name__ == "__main__":
    main()